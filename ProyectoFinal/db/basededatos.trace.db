2020-05-17 18:26:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Tipo de dato desconocido : "FAV"
Unknown data type: "FAV"; SQL statement:
create table usuario_reg_vehiculos_fav (usuario bigint not null, vehiculo fav bigint not null) [50004-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5971)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5697)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8442)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8379)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1249)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:12)
2020-05-17 18:26:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "ALTER TABLE USUARIO_REG_VEHICULOS_FAV ADD CONSTRAINT FK9X6MVQTSC3IUIBLKIB017KP6G FOREIGN KEY (VEHICULO FAV[*]) REFERENCES VEHICULO"; se esperaba "ASC, DESC, NULLS, ,, )"
Syntax error in SQL statement "ALTER TABLE USUARIO_REG_VEHICULOS_FAV ADD CONSTRAINT FK9X6MVQTSC3IUIBLKIB017KP6G FOREIGN KEY (VEHICULO FAV[*]) REFERENCES VEHICULO"; expected "ASC, DESC, NULLS, ,, )"; SQL statement:
alter table usuario_reg_vehiculos_fav add constraint FK9x6mvqtsc3iuiblkib017kp6g foreign key (vehiculo fav) references vehiculo [42001-200]
2020-05-17 18:26:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIO_REG_VEHICULOS_FAV" no encontrada
Table "USUARIO_REG_VEHICULOS_FAV" not found; SQL statement:
alter table usuario_reg_vehiculos_fav add constraint FKb38lbovak4qciwlqpdfjlork4 foreign key (usuario) references usuario_reg [42102-200]
2020-05-17 18:27:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Tipo de dato desconocido : "FAV"
Unknown data type: "FAV"; SQL statement:
create table usuario_reg_vehiculos_fav (usuario bigint not null, vehiculo fav bigint not null) [50004-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5971)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5697)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8442)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8379)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1249)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:12)
2020-05-17 18:27:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "ALTER TABLE USUARIO_REG_VEHICULOS_FAV ADD CONSTRAINT FK9X6MVQTSC3IUIBLKIB017KP6G FOREIGN KEY (VEHICULO FAV[*]) REFERENCES VEHICULO"; se esperaba "ASC, DESC, NULLS, ,, )"
Syntax error in SQL statement "ALTER TABLE USUARIO_REG_VEHICULOS_FAV ADD CONSTRAINT FK9X6MVQTSC3IUIBLKIB017KP6G FOREIGN KEY (VEHICULO FAV[*]) REFERENCES VEHICULO"; expected "ASC, DESC, NULLS, ,, )"; SQL statement:
alter table usuario_reg_vehiculos_fav add constraint FK9x6mvqtsc3iuiblkib017kp6g foreign key (vehiculo fav) references vehiculo [42001-200]
2020-05-17 18:27:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIO_REG_VEHICULOS_FAV" no encontrada
Table "USUARIO_REG_VEHICULOS_FAV" not found; SQL statement:
alter table usuario_reg_vehiculos_fav add constraint FKb38lbovak4qciwlqpdfjlork4 foreign key (usuario) references usuario_reg [42102-200]
2020-05-17 18:29:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Tipo de dato desconocido : "FAV"
Unknown data type: "FAV"; SQL statement:
create table usuario_reg_vehiculos_fav (usuario bigint not null, vehiculo fav bigint not null) [50004-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5971)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5697)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8442)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8379)
	at org.h2.command.Parser.parseCreate(Parser.java:6276)
	at org.h2.command.Parser.parsePrepared(Parser.java:903)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1249)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:12)
2020-05-17 18:29:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "ALTER TABLE USUARIO_REG_VEHICULOS_FAV ADD CONSTRAINT FK9X6MVQTSC3IUIBLKIB017KP6G FOREIGN KEY (VEHICULO FAV[*]) REFERENCES VEHICULO"; se esperaba "ASC, DESC, NULLS, ,, )"
Syntax error in SQL statement "ALTER TABLE USUARIO_REG_VEHICULOS_FAV ADD CONSTRAINT FK9X6MVQTSC3IUIBLKIB017KP6G FOREIGN KEY (VEHICULO FAV[*]) REFERENCES VEHICULO"; expected "ASC, DESC, NULLS, ,, )"; SQL statement:
alter table usuario_reg_vehiculos_fav add constraint FK9x6mvqtsc3iuiblkib017kp6g foreign key (vehiculo fav) references vehiculo [42001-200]
2020-05-17 18:29:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "USUARIO_REG_VEHICULOS_FAV" no encontrada
Table "USUARIO_REG_VEHICULOS_FAV" not found; SQL statement:
alter table usuario_reg_vehiculos_fav add constraint FKb38lbovak4qciwlqpdfjlork4 foreign key (usuario) references usuario_reg [42102-200]
2020-06-08 17:23:15 database: flush
org.h2.message.DbException: Error General : "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$h2Console$0(H2ConsoleAutoConfiguration.java:73)
	at org.springframework.beans.factory.ObjectProvider.ifAvailable(ObjectProvider.java:93)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5140)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:468)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:87)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:21)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Error General : "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 91 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 85 more
2020-06-08 17:23:16 database: flush
org.h2.message.DbException: Error General : "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1214)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1245)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:21)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Error General : "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 68 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/Nago/Desktop/DAM/Spring/Workspace/ProyectoFinal/db/basededatos.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 62 more
2020-06-11 12:50:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "NUMBASTIDOR" no encontrada
Column "NUMBASTIDOR" not found; SQL statement:
insert into vehiculo (numBastidor, matricula, marca, modelo, tipo_auto, motor_cc, CV, fecha_alta, fecha_compra, fecha_venta, kilometros, precio, estado) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350', 'Gasolina', 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525, 'KM 0') [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:703)
	at org.h2.command.Parser.parseColumn(Parser.java:1450)
	at org.h2.command.Parser.parseColumnList(Parser.java:1435)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1804)
	at org.h2.command.Parser.parseInsert(Parser.java:1749)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:21)
2020-06-11 13:06:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350','TodoTerreno, 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('SCFEDCAD2AG990706', '8167FWZ', 'BMW', 'M3', 'Gasolina', 'Segunda mano', null , 2.3, 185.4, '2007-10-05', '2007-11-1', null, 100514, 12975);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WBADT33461G968540', 2025HJP, 'Opel', 'Astra', Diesel, 'Segunda Mano', null, 2.0, 153.1, '2012-03-02', '2012-03-14', null, 143547, 61273);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('JA4AS2AW8DU994144', '7490HNX', 'Renault', 'Megane', Diesel, 'Segunda Mano', null , 2.2, 172.1, '2013-02-25', '2013-03-05', null, 201438, 9719);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('YV1940AS2B1412505', 2508KKC, 'Jeep', 'Wrangler', Diesel, 'KM 0', null, 3.5, 409.2, '2018-04-16', '2018-05-01', null, 23008, 48830);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('1G6AZ5SX1E0756724', 1398KND, 'Mazda', 'Mazda6', Diesel, 'KM 0', null , 2.5, 200.0, '2017-11-03', '2017-11-11[*]', null, 28224, 18851);"
Syntax error in SQL statement "insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350','TodoTerreno, 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('SCFEDCAD2AG990706', '8167FWZ', 'BMW', 'M3', 'Gasolina', 'Segunda mano', null , 2.3, 185.4, '2007-10-05', '2007-11-1', null, 100514, 12975);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WBADT33461G968540', 2025HJP, 'Opel', 'Astra', Diesel, 'Segunda Mano', null, 2.0, 153.1, '2012-03-02', '2012-03-14', null, 143547, 61273);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('JA4AS2AW8DU994144', '7490HNX', 'Renault', 'Megane', Diesel, 'Segunda Mano', null , 2.2, 172.1, '2013-02-25', '2013-03-05', null, 201438, 9719);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('YV1940AS2B1412505', 2508KKC, 'Jeep', 'Wrangler', Diesel, 'KM 0', null, 3.5, 409.2, '2018-04-16', '2018-05-01', null, 23008, 48830);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('1G6AZ5SX1E0756724', 1398KND, 'Mazda', 'Mazda6', Diesel, 'KM 0', null , 2.5, 200.0, '2017-11-03', '2017-11-11[*]', null, 28224, 18851);"; SQL statement:
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350','TodoTerreno, 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('SCFEDCAD2AG990706', '8167FWZ', 'BMW', 'M3', 'Gasolina', 'Segunda mano', null , 2.3, 185.4, '2007-10-05', '2007-11-1', null, 100514, 12975);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WBADT33461G968540', 2025HJP, 'Opel', 'Astra', Diesel, 'Segunda Mano', null, 2.0, 153.1, '2012-03-02', '2012-03-14', null, 143547, 61273);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('JA4AS2AW8DU994144', '7490HNX', 'Renault', 'Megane', Diesel, 'Segunda Mano', null , 2.2, 172.1, '2013-02-25', '2013-03-05', null, 201438, 9719);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('YV1940AS2B1412505', 2508KKC, 'Jeep', 'Wrangler', Diesel, 'KM 0', null, 3.5, 409.2, '2018-04-16', '2018-05-01', null, 23008, 48830);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('1G6AZ5SX1E0756724', 1398KND, 'Mazda', 'Mazda6', Diesel, 'KM 0', null , 2.5, 200.0, '2017-11-03', '2017-11-11', null, 28224, 18851); [42000-200]
2020-06-11 13:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350','TodoTerreno, 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('SCFEDCAD2AG990706', '8167FWZ', 'BMW', 'M3', 'Gasolina', 'Segunda mano', null , 2.3, 185.4, '2007-10-05', '2007-11-1', null, 100514, 12975);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WBADT33461G968540', '2025HJP', 'Opel', 'Astra', Diesel, 'Segunda Mano', null, 2.0, 153.1, '2012-03-02', '2012-03-14', null, 143547, 61273);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('JA4AS2AW8DU994144', '7490HNX', 'Renault', 'Megane', Diesel, 'Segunda Mano', null , 2.2, 172.1, '2013-02-25', '2013-03-05', null, 201438, 9719);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('YV1940AS2B1412505', '2508KKC', 'Jeep', 'Wrangler', Diesel, 'KM 0', null, 3.5, 409.2, '2018-04-16', '2018-05-01', null, 23008, 48830);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('1G6AZ5SX1E0756724', '1398KND', 'Mazda', 'Mazda6', Diesel, 'KM 0', null , 2.5, 200.0, '2017-11-03', '2017-11-11[*]', null, 28224, 18851);"
Syntax error in SQL statement "insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350','TodoTerreno, 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('SCFEDCAD2AG990706', '8167FWZ', 'BMW', 'M3', 'Gasolina', 'Segunda mano', null , 2.3, 185.4, '2007-10-05', '2007-11-1', null, 100514, 12975);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WBADT33461G968540', '2025HJP', 'Opel', 'Astra', Diesel, 'Segunda Mano', null, 2.0, 153.1, '2012-03-02', '2012-03-14', null, 143547, 61273);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('JA4AS2AW8DU994144', '7490HNX', 'Renault', 'Megane', Diesel, 'Segunda Mano', null , 2.2, 172.1, '2013-02-25', '2013-03-05', null, 201438, 9719);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('YV1940AS2B1412505', '2508KKC', 'Jeep', 'Wrangler', Diesel, 'KM 0', null, 3.5, 409.2, '2018-04-16', '2018-05-01', null, 23008, 48830);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('1G6AZ5SX1E0756724', '1398KND', 'Mazda', 'Mazda6', Diesel, 'KM 0', null , 2.5, 200.0, '2017-11-03', '2017-11-11[*]', null, 28224, 18851);"; SQL statement:
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350','TodoTerreno, 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('SCFEDCAD2AG990706', '8167FWZ', 'BMW', 'M3', 'Gasolina', 'Segunda mano', null , 2.3, 185.4, '2007-10-05', '2007-11-1', null, 100514, 12975);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WBADT33461G968540', '2025HJP', 'Opel', 'Astra', Diesel, 'Segunda Mano', null, 2.0, 153.1, '2012-03-02', '2012-03-14', null, 143547, 61273);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('JA4AS2AW8DU994144', '7490HNX', 'Renault', 'Megane', Diesel, 'Segunda Mano', null , 2.2, 172.1, '2013-02-25', '2013-03-05', null, 201438, 9719);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('YV1940AS2B1412505', '2508KKC', 'Jeep', 'Wrangler', Diesel, 'KM 0', null, 3.5, 409.2, '2018-04-16', '2018-05-01', null, 23008, 48830);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('1G6AZ5SX1E0756724', '1398KND', 'Mazda', 'Mazda6', Diesel, 'KM 0', null , 2.5, 200.0, '2017-11-03', '2017-11-11', null, 28224, 18851); [42000-200]
2020-06-11 13:21:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350','TodoTerreno, 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null);
/*
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('SCFEDCAD2AG990706', '8167FWZ', 'BMW', 'M3', 'Gasolina', 'Segunda mano', null , 2.3, 185.4, '2007-10-05', '2007-11-1', null, 100514, 12975);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WBADT33461G968540', '2025HJP', 'Opel', 'Astra', Diesel, 'Segunda Mano', null, 2.0, 153.1, '2012-03-02', '2012-03-14', null, 143547, 61273);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('JA4AS2AW8DU994144', '7490HNX', 'Renault', 'Megane', Diesel, 'Segunda Mano', null , 2.2, 172.1, '2013-02-25', '2013-03-05', null, 201438, 9719);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('YV1940AS2B1412505', '2508KKC', 'Jeep', 'Wrangler', Diesel, 'KM 0', null, 3.5, 409.2, '2018-04-16', '2018-05-01', null, 23008, 48830);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('1G6AZ5SX1E0756724', '1398KND', 'Mazda', 'Mazda6', Diesel, 'KM 0', null , 2.5, 200.0, '2017-11-03', '2017-11-11[*]', null, 28224, 18851);
*/"
Syntax error in SQL statement "insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350','TodoTerreno, 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null);
/*
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('SCFEDCAD2AG990706', '8167FWZ', 'BMW', 'M3', 'Gasolina', 'Segunda mano', null , 2.3, 185.4, '2007-10-05', '2007-11-1', null, 100514, 12975);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WBADT33461G968540', '2025HJP', 'Opel', 'Astra', Diesel, 'Segunda Mano', null, 2.0, 153.1, '2012-03-02', '2012-03-14', null, 143547, 61273);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('JA4AS2AW8DU994144', '7490HNX', 'Renault', 'Megane', Diesel, 'Segunda Mano', null , 2.2, 172.1, '2013-02-25', '2013-03-05', null, 201438, 9719);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('YV1940AS2B1412505', '2508KKC', 'Jeep', 'Wrangler', Diesel, 'KM 0', null, 3.5, 409.2, '2018-04-16', '2018-05-01', null, 23008, 48830);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('1G6AZ5SX1E0756724', '1398KND', 'Mazda', 'Mazda6', Diesel, 'KM 0', null , 2.5, 200.0, '2017-11-03', '2017-11-11[*]', null, 28224, 18851);
*/"; SQL statement:
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350','TodoTerreno, 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null);
/*
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('SCFEDCAD2AG990706', '8167FWZ', 'BMW', 'M3', 'Gasolina', 'Segunda mano', null , 2.3, 185.4, '2007-10-05', '2007-11-1', null, 100514, 12975);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('WBADT33461G968540', '2025HJP', 'Opel', 'Astra', Diesel, 'Segunda Mano', null, 2.0, 153.1, '2012-03-02', '2012-03-14', null, 143547, 61273);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('JA4AS2AW8DU994144', '7490HNX', 'Renault', 'Megane', Diesel, 'Segunda Mano', null , 2.2, 172.1, '2013-02-25', '2013-03-05', null, 201438, 9719);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('YV1940AS2B1412505', '2508KKC', 'Jeep', 'Wrangler', Diesel, 'KM 0', null, 3.5, 409.2, '2018-04-16', '2018-05-01', null, 23008, 48830);
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio) values ('1G6AZ5SX1E0756724', '1398KND', 'Mazda', 'Mazda6', Diesel, 'KM 0', null , 2.5, 200.0, '2017-11-03', '2017-11-11', null, 28224, 18851);
*/ [42000-200]
2020-06-11 13:27:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "NUMBASTIDOR" no encontrada
Column "NUMBASTIDOR" not found; SQL statement:
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350', 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null) [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:703)
	at org.h2.command.Parser.parseColumn(Parser.java:1450)
	at org.h2.command.Parser.parseColumnList(Parser.java:1435)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1804)
	at org.h2.command.Parser.parseInsert(Parser.java:1749)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:22)
2020-06-11 13:29:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "NUMBASTIDOR" no encontrada
Column "NUMBASTIDOR" not found; SQL statement:
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350', 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null) [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:703)
	at org.h2.command.Parser.parseColumn(Parser.java:1450)
	at org.h2.command.Parser.parseColumnList(Parser.java:1435)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1804)
	at org.h2.command.Parser.parseInsert(Parser.java:1749)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:22)
2020-06-11 13:29:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "NUMBASTIDOR" no encontrada
Column "NUMBASTIDOR" not found; SQL statement:
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor_cc, CV, kilometros, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350', 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null) [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:703)
	at org.h2.command.Parser.parseColumn(Parser.java:1450)
	at org.h2.command.Parser.parseColumnList(Parser.java:1435)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1804)
	at org.h2.command.Parser.parseInsert(Parser.java:1749)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:22)
2020-06-11 13:30:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "NUMBASTIDOR" no encontrada
Column "NUMBASTIDOR" not found; SQL statement:
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor, cv, km, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350', 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null) [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:703)
	at org.h2.command.Parser.parseColumn(Parser.java:1450)
	at org.h2.command.Parser.parseColumnList(Parser.java:1435)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1804)
	at org.h2.command.Parser.parseInsert(Parser.java:1749)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:22)
2020-06-11 13:31:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "NUMBASTIDOR" no encontrada
Column "NUMBASTIDOR" not found; SQL statement:
insert into vehiculo (numBastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor, cv, km, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350', 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null) [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:703)
	at org.h2.command.Parser.parseColumn(Parser.java:1450)
	at org.h2.command.Parser.parseColumnList(Parser.java:1435)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1804)
	at org.h2.command.Parser.parseInsert(Parser.java:1749)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:22)
2020-06-11 13:31:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "TIPOCOMBUSTIBLE" no encontrada
Column "TIPOCOMBUSTIBLE" not found; SQL statement:
insert into vehiculo (num_bastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor, cv, km, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350', 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null) [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:703)
	at org.h2.command.Parser.parseColumn(Parser.java:1450)
	at org.h2.command.Parser.parseColumnList(Parser.java:1435)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1804)
	at org.h2.command.Parser.parseInsert(Parser.java:1749)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:22)
2020-06-11 13:33:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "TIPOCOMBUSTIBLE" no encontrada
Column "TIPOCOMBUSTIBLE" not found; SQL statement:
insert into vehiculo (num_bastidor, matricula, marca, modelo, tipoCombustible, estado, imagen, motor, cv, km, fecha_alta, fecha_compra, fecha_venta, precio, color, llantasAle, lunasTint, ac, navegador, farosLed) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350', 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null) [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:703)
	at org.h2.command.Parser.parseColumn(Parser.java:1450)
	at org.h2.command.Parser.parseColumnList(Parser.java:1435)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1804)
	at org.h2.command.Parser.parseInsert(Parser.java:1749)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:22)
2020-06-11 13:33:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "LLANTA_ALE" no encontrada
Column "LLANTA_ALE" not found; SQL statement:
insert into vehiculo (num_bastidor, matricula, marca, modelo, tipo_combustible, estado, imagen, motor, cv, km, fecha_alta, fecha_compra, fecha_venta, precio, color, llanta_ale, lunas_tint, ac, navegador, faros_led) values ('WP0AA2A96BS255642', '7501DJK', 'Ford', 'F350', 'Gasolina', 'KM 0', null , 3.3, 198.7, '2005-04-09', '2004-05-02', null, 28982, 18525,null,null,null,null,null,null) [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:703)
	at org.h2.command.Parser.parseColumn(Parser.java:1450)
	at org.h2.command.Parser.parseColumnList(Parser.java:1435)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1804)
	at org.h2.command.Parser.parseInsert(Parser.java:1749)
	at org.h2.command.Parser.parsePrepared(Parser.java:954)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:815)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.ProyectoFinal.main.ProyectoFinalApplication.main(ProyectoFinalApplication.java:22)
